[gd_scene load_steps=18 format=3 uid="uid://dfvi0w0b8q13k"]

[ext_resource type="ArrayMesh" uid="uid://bxourcuql6iub" path="res://models/weapons/pistol.obj" id="1_qi2as"]
[ext_resource type="Texture2D" uid="uid://bmbu12lbnrams" path="res://addons/kenney_particle_pack/muzzle_05.png" id="2_er7t0"]
[ext_resource type="AudioStream" uid="uid://d0d74epfw3sg3" path="res://audio/pistol_shoot.wav" id="3_1g14o"]

[sub_resource type="GDScript" id="GDScript_8cwsq"]
resource_name = "Player"
script/source = "extends CharacterBody3D

signal health_changed(health_value)

@onready var camera = $Camera3D
@onready var anim_player = $AnimationPlayer
@onready var muzzle_flash = $Camera3D/Pistol/MuzzleFlash
@onready var raycast = $Camera3D/RayCast3D
@onready var player_model = $PlayerModel
@onready var pistol_shoot = $PistolShoot
	
var spawn_points = [Vector3(-4.598, 148.188, -19.367), Vector3(-143.5, 148.10, -134.98), \\
Vector3(-111.9, 148.10, 115.94), Vector3(-255.6, 148.15, 7.546)] 
var spawn_points_clone = spawn_points
var taken_points = []



var health = 100

const SPEED = 13.0
const JUMP_VELOCITY = 8.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = 20.0


func _enter_tree():
	set_multiplayer_authority(str(name).to_int())
	
func _ready():
	if not is_multiplayer_authority(): return
	
	
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	camera.current = true
	
func _unhandled_input(event):
	if not is_multiplayer_authority(): return
	
	if event is InputEventMouseMotion:
		rotate_y(-event.relative.x * .005)
		camera.rotate_x(-event.relative.y * .005)
		camera.rotation.x = clamp(camera.rotation.x, -PI/2, PI/2)
		
	if Input.is_action_just_pressed(\"shoot\") \\
	and anim_player.current_animation != \"shoot\":
		play_shoot_effects.rpc()
		if raycast.is_colliding():
			var hit_player = raycast.get_collider()
			hit_player.receive_damage.rpc_id(hit_player.get_multiplayer_authority())
			

func _physics_process(delta):
	if not is_multiplayer_authority(): return
	
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	if anim_player.current_animation == \"shoot\":
		pass

	elif input_dir != Vector2.ZERO and is_on_floor():
		anim_player.play(\"move\")
	else:
		anim_player.play(\"idle\")

	move_and_slide()
	
@rpc(\"call_local\")
func play_shoot_effects():
	anim_player.stop()
	anim_player.play(\"shoot\")
	pistol_shoot.play()
	muzzle_flash.restart()
	muzzle_flash.emitting = true
	
@rpc(\"any_peer\")
func receive_damage():
	health -= 25
	if health <= 0:
		health = 100
		dead()
	health_changed.emit(health)
	
func _on_animation_player_animation_finished(anim_name):
	if anim_name == \"shoot\":
		anim_player.play(\"idle\")

func dead():
	health -= 100
	print(multiplayer.get_unique_id())
	if health <= 0:
		health = 100
		position = Vector3(spawn_location())
	health_changed.emit(health)
	
func set_pos(pos):
	position = Vector3(pos)
	

func spawn_location():
	var point = randi()%spawn_points.size()
	#print(\"point is \", point)
	var loc = spawn_points[point]
	#print(\"loc is, \", loc)
	#taken_points.append(loc)
	#print(\"taken_points is, \", taken_points)
	#print(\"spawn_points is, \", spawn_points)
	#if spawn_points.size() <= 0:			# INFINITE SPAWN
		#print(\"spawn points duplicated\")
		#spawn_points = spawn_points_clone.duplicate()
		#taken_points.clear()
	
	#print(\"loc again is \", loc)
	return loc

"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_8ag0u"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_g2l7h"]

[sub_resource type="Gradient" id="Gradient_m20ii"]
offsets = PackedFloat32Array(0, 0.195122, 1)
colors = PackedColorArray(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_aleu7"]
gradient = SubResource("Gradient_m20ii")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_nvnt8"]
gravity = Vector3(0, 0, 0)
color_ramp = SubResource("GradientTexture1D_aleu7")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_qdq01"]
transparency = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_color = Color(0.976471, 0.811765, 0.341176, 1)
albedo_texture = ExtResource("2_er7t0")
billboard_mode = 3
particles_anim_h_frames = 1
particles_anim_v_frames = 1
particles_anim_loop = false

[sub_resource type="PlaneMesh" id="PlaneMesh_x7oop"]
material = SubResource("StandardMaterial3D_qdq01")
size = Vector2(0.2, 0.2)
orientation = 2

[sub_resource type="Animation" id="Animation_i50hr"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D/Pistol:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0.55674, -0.476864, -0.461548)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D/Pistol:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 1.5708, 0)]
}

[sub_resource type="Animation" id="Animation_admm7"]
resource_name = "idle"
length = 3.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D/Pistol:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.5),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector3(0.55674, -0.476864, -0.461548), Vector3(0.55674, -0.491004, -0.461548)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D/Pistol:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1.5),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector3(0, 1.5708, 0), Vector3(2.62206e-09, 1.5708, -0.0600219)]
}

[sub_resource type="Animation" id="Animation_bqjym"]
resource_name = "move"
loop_mode = 1
step = 0.25
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D/Pistol:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.25, 0.5, 0.75),
"transitions": PackedFloat32Array(0.5, 2, 0.5, 2),
"update": 0,
"values": [Vector3(0.55674, -0.476864, -0.461548), Vector3(0.538915, -0.452837, -0.461548), Vector3(0.55674, -0.476864, -0.461548), Vector3(0.582859, -0.462686, -0.461548)]
}

[sub_resource type="Animation" id="Animation_jbg0s"]
resource_name = "shoot"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D/Pistol:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(0.5, 1),
"update": 0,
"values": [Vector3(0.55674, -0.462661, -0.454303), Vector3(0.557, -0.477, -0.462)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D/Pistol:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(0.5, 1),
"update": 0,
"values": [Vector3(-5.93383e-09, 1.5708, 0.136171), Vector3(0, 1.5708, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ogk01"]
_data = {
"RESET": SubResource("Animation_i50hr"),
"idle": SubResource("Animation_admm7"),
"move": SubResource("Animation_bqjym"),
"shoot": SubResource("Animation_jbg0s")
}

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_0r7t1"]
properties/0/path = NodePath(".:position")
properties/0/spawn = true
properties/0/sync = true
properties/0/watch = false
properties/1/path = NodePath(".:rotation")
properties/1/spawn = true
properties/1/sync = true
properties/1/watch = false
properties/2/path = NodePath("Camera3D:rotation")
properties/2/spawn = true
properties/2/sync = true
properties/2/watch = false

[node name="Player" type="CharacterBody3D"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 0)
collision_layer = 2
script = SubResource("GDScript_8cwsq")

[node name="PlayerModel" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CapsuleMesh_8ag0u")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1.16197, 0, 0, 0, 1, 0, 0, 0, 1.50571, 0.015285, 1, -0.231519)
shape = SubResource("CapsuleShape3D_g2l7h")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.55603, -0.112114)

[node name="Pistol" type="MeshInstance3D" parent="Camera3D"]
transform = Transform3D(-3.61999e-07, 0, 0.1, 0, 0.1, 0, -0.1, 0, -3.61999e-07, 0.55674, -0.476864, -0.461548)
mesh = ExtResource("1_qi2as")
skeleton = NodePath("../..")

[node name="MuzzleFlash" type="GPUParticles3D" parent="Camera3D/Pistol"]
transform = Transform3D(1, 0, -2.13163e-14, 0, 1, 0, 9.9476e-14, 0, 1, 2.3715, 3.52466, -1.7944)
emitting = false
amount = 1
lifetime = 0.2
one_shot = true
local_coords = true
process_material = SubResource("ParticleProcessMaterial_nvnt8")
draw_pass_1 = SubResource("PlaneMesh_x7oop")

[node name="RayCast3D" type="RayCast3D" parent="Camera3D"]
target_position = Vector3(0, 0, -50)
collision_mask = 2

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "idle"
playback_default_blend_time = 0.05
libraries = {
"": SubResource("AnimationLibrary_ogk01")
}

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_0r7t1")

[node name="PistolShoot" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("3_1g14o")

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
